How to use 2-matrix_divided.py
==============================

The module defines a function that divides all elements of a matrix. 
	'matrix_divided(matrix, div):'

Usage:
======

It divides each element in matrix by div and returns a new matrix with it's
element being the result of the individual devisions.

Let us begin by importing the function from our module '2-matrix_divided.py'

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Lets pass a single matrix to the function
	>>> matrix_divided([2, 4, 6], 2)
	Traceback (most recent call last):
	TypeError: 'int' object is not iterable

Oops! lets enclose the matrix in a double square bracket
	>>> matrix_divided([[2, 4, 6]], 2)
	[[1.0, 2.0, 3.0]]

Great!


The function can take matrices => 1 set
	>>> matrix = [
    	... 	[1, 2, 3],
    	...	[4, 5, 6]
	...	]
	>>> matrix_divided(matrix, 2)
	[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

Note, each element is rounded to 2 decimal places and 1 decimal place for 
whole numbers
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]


matrix can contain integer, floating point number or a combination of both
	>>> matrix = [
	...     [2.2, 3.3, 4.4],
	...     [1.0, 2.5, 2.3],
	...     [2, 3, 4]
	... ]
	>>> matrix_divided(matrix, 4)
	[[0.55, 0.82, 1.1], [0.25, 0.62, 0.57], [0.5, 0.75, 1.0]]


Too large elements are represented as 'inf' (infinity) when used in the matrix
	>>> matrix = [
	...     [2, 3, 4e1000],
	...     [3, 4.9, 19.0]
	... ]
	>>> matrix_divided(matrix, 2)
	[[1.0, 1.5, inf], [1.5, 2.45, 9.5]]


Each element must be a number or a float otherwise a TypeError is raised
	>>> matrix = [
	...     [1.0, 2.5, 'Hello'],
	...     [2, 3, 4]
	... ]
	>>> matrix_divided(matrix, 9)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats


Each row of matrix must contain the same number of elements. Otherwise a
TypeError is raised
	>>> matrix = [
	...     [2, 3, 4],
	...     [1.0, 2.5, 2.3, 2.2]
	... ]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size


'div' must be a number which must not be equal to 0
	>>> matrix = [
	...     [2, 3, 4],
	...     [3, 4.9, 19.0]
	... ]
	>>> matrix_divided(matrix, "Hi")
	Traceback (most recent call last):
	TypeError: div must be a number


Not even when 'None' is used for div
	>>> matrix = [
	...     [3, 4.9, 19.0],
	...     [1.0, 2.5, 90.9]
	... ]
	>>> matrix_divided(matrix, None)
	Traceback (most recent call last):
	TypeError: div must be a number


ZeroDivisionError is raised when div == 0
	>>> matrix = [
	...     [2, 3, 4],
	...     [3, 4.9, 19.0]
	... ]
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero


What if the value for 'div' is not parsed?
	>>> matrix = [
	...     [3, 4.9, 19.0],
	...     [1.0, 2.5, 90.9]
	... ]
	>>> matrix_divided(matrix)
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 1 required positional argument: 'div'
